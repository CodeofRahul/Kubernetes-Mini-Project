1. Build the app(any) and text in local
2. Start dockerhub and docker-decktop (sign-in to both)
3. Prepare the dockerfile in the project

4. Create the Docker image and test it:
    >> docker build  -t kubernetes-test-app:latest .
    >> docker images
    >> docker run -p 5000:5000 kubernetes-test-app:latest

5. Create deployment.yaml

6. Install Minikube
    >> Go to: https://minikube.sigs.k8s.io/docs/start/?arch=%2Fwindows%2Fx86-64%2Fstable%2F.exe+download
    >> .exe download -> powershell command -> Run via powershell as admin -> restart terminal (reboot)

>> minikube start / minikube start --embed-certs

-------------------------------------------------------------------------------------------------------------------------------------------------------------------
!! You might face possible error - "" ! Failing to connect to https://registry.k8s.io/ from both inside the minikube container and host machine
                                    * To pull new external images, you may need to configure a proxy: /reference/networking.proxy/ ""

potential sol:
> If proxy is being used, set proxy for minikube: minikube start --docker-env HTTP_PROXY-http://your-proxy:port --docker-env HTTPS_PROXY-http://your-proxy:port
> If no proxy being used, unset the below:
unset HTTP_PROXY
unset HTTPS_PROXY
unset No_PROXY

> Test connectinvity to registry.k8s.io: 'nslookup registry.k8s.io'
Server:  UnKnown
Address:  192.168.43.1

Non-authoritative answer:
Name:    registry.k8s.io
Addresses:  2600:1901:0:bbc4::
          34.96.108.209 

> minikube stop
> minikube delete --all
> restart system

-----------------------------------------------------------------------------------------------------------------------------------------

>> minikube status

>> kubectl get all -A
>> kubectl get pods -A
>> kubectl get nodes -A

>> How to add node? - minikube start --nodes=2 / minikube start --nodes=2 --embed-certs

>> minikube image list
>> docker images
>> minikube image load kubernetes-test-app:latest

>> kubectl apply -f deployment.yaml (from project directory)
>> kubectl delete deployment kubernetes-test-app (conditional)

>> kubectl get pods -A
>> kubectl get nodes -A

>> kubectl delete pod <pod-name/id>
>> minikube service kubernetes-test-app
>> minikube dashboard

>> kubectl get endpoints
>> kubectl get service

** Load Balancing **
>> kubectl get pods
>> kubectl logs -f <pod-id>
>> Postman -> Collection -> Runs -> Performance -> Run Performance Test -> Performance -> (Fixes -> 10users -> 1min)

>> minikube stop

for status: ImagePullbackoff issue
>> docker tag kubernetes-test-app:latest rahul130/kubernetes-test-app:latest
>> docker push rahul130/kubernetes-test-app:latest